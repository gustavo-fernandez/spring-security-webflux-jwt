---
apiVersion: v1
kind: Service
metadata:
  name: spring-application
  labels:
    app: spring-application
    version: "1.0.4"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  selector:
    app: spring-application
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-application
  labels:
    app: spring-application
    version: "1.0.4"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-application
  template:
    metadata:
      labels:
        app: spring-application
        version: "1.0.4"
    spec:
      containers:
        - name: spring-application
          image: "acrspring01.azurecr.io/spring-application:1.0.4"
          imagePullPolicy: Always
          envFrom:
            []
          env:
            - name: "SERVER_PORT"
              value: "8080"
            - name: "SPRING_APPLICATION_NAME"
              value: "spring-application"
            - name: "SPRING_PROFILES_ACTIVE"
              value: "dev"
            - name: "SPRING_CONFIG_IMPORT"
              value: "configserver:http://config-server.spring.svc.cluster.local:80"
            - name: "spring.main.banner-mode"
              value: "off"
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: tz-config
              mountPath: /etc/localtime
              readOnly: true
          args: [ "" ]
          resources:
            {}
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              httpHeaders:
                - name: probe-type
                  value: startup
            failureThreshold: 3
            periodSeconds: 4
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              httpHeaders:
                - name: probe-type
                  value: liveness
            initialDelaySeconds: 3
            failureThreshold: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              httpHeaders:
                - name: probe-type
                  value: readiness
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
      volumes:
        - name: tz-config
          hostPath:
            path: /usr/share/zoneinfo/America/Lima
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: spring-application
  labels:
    app: spring-application
    version: "1.0.4"
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "32k"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "Request-Id: $req_id";
spec:
  rules:
    - http:
        paths:
          - path: /spring-application/(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: spring-application
                port:
                  number: 80
